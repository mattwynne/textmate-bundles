<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>changed</key>
	<dict>
		<key>patterns</key>
		<array>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.class.ruby</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.class.ruby</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>entity.other.inherited-class.ruby</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.inheritance.ruby</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>variable.other.object.ruby</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>^\s*(class)\s+(([.a-zA-Z0-9_:]+(\s*(&lt;)\s*[.a-zA-Z0-9_:]+)?)|((&lt;&lt;)\s*[.a-zA-Z0-9_:]+))</string>
				<key>name</key>
				<string>meta.class.ruby</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.module.ruby</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.module.ruby</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.other.inherited-class.module.first.ruby</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.inheritance.ruby</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>entity.other.inherited-class.module.second.ruby</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.inheritance.ruby</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>entity.other.inherited-class.module.third.ruby</string>
					</dict>
					<key>8</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.inheritance.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>^\s*(module)\s+(([A-Z]\w*(::))?([A-Z]\w*(::))?([A-Z]\w*(::))*[A-Z]\w*)</string>
				<key>name</key>
				<string>meta.module.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>else if is a common mistake carried over from other languages. it works if you put in a second end, but itâ€™s never what you want.</string>
				<key>match</key>
				<string>(?&lt;!\.)\belse(\s)+if\b</string>
				<key>name</key>
				<string>invalid.deprecated.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>everything being a reserved word, not a value and needing a 'end' is a..</string>
				<key>match</key>
				<string>(?&lt;!\.)\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\b(?![?!])</string>
				<key>name</key>
				<string>keyword.control.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>contextual smart pair support for block parameters</string>
				<key>match</key>
				<string>(?&lt;!\.)\bdo\b\s*</string>
				<key>name</key>
				<string>keyword.control.start-block.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>contextual smart pair support</string>
				<key>match</key>
				<string>(?&lt;=\{)(\s+)</string>
				<key>name</key>
				<string>meta.syntax.ruby.start-block</string>
			</dict>
			<dict>
				<key>comment</key>
				<string> as above, just doesn't need a 'end' and does a logic operation</string>
				<key>match</key>
				<string>(?&lt;!\.)\b(and|not|or)\b</string>
				<key>name</key>
				<string>keyword.operator.logical.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string> just as above but being not a logical operation</string>
				<key>match</key>
				<string>(?&lt;!\.)\b(alias|alias_method|break|next|redo|retry|return|super|undef|yield)\b(?![?!])|\bdefined\?|\bblock_given\?</string>
				<key>name</key>
				<string>keyword.control.pseudo-method.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(nil|true|false)\b(?![?!])</string>
				<key>name</key>
				<string>constant.language.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(__(FILE|LINE)__|self)\b(?![?!])</string>
				<key>name</key>
				<string>variable.language.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string> everything being a method but having a special function is a..</string>
				<key>match</key>
				<string>\b(initialize|new|loop|include|extend|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|module_function|public|protected)\b(?![?!])</string>
				<key>name</key>
				<string>keyword.other.special-method.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(require)\b</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.other.special-method.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$|(?=#)</string>
				<key>name</key>
				<string>meta.require.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(@)[a-zA-Z_]\w*</string>
				<key>name</key>
				<string>variable.other.readwrite.instance.ruby</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(@@)[a-zA-Z_]\w*</string>
				<key>name</key>
				<string>variable.other.readwrite.class.ruby</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(\$)[a-zA-Z_]\w*</string>
				<key>name</key>
				<string>variable.other.readwrite.global.ruby</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(\$)(!|@|&amp;|`|'|\+|\d+|~|=|/|\\|,|;|\.|&lt;|&gt;|_|\*|\$|\?|:|"|-[0adFiIlpv])</string>
				<key>name</key>
				<string>variable.other.readwrite.global.pre-defined.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(ENV)\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>variable.other.constant.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\]</string>
				<key>name</key>
				<string>meta.environment-variable.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>\b[A-Z]\w*(?=((\.|::)[A-Za-z]|\[))</string>
				<key>name</key>
				<string>support.class.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b[A-Z]\w*\b</string>
				<key>name</key>
				<string>variable.other.constant.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;=^|\s)\b(def)\b\s+((?&gt;[a-zA-Z_]\w*(?&gt;\.|::))?(?&gt;[a-zA-Z_]\w*(?&gt;[?!]|=(?!&gt;))?|===?|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?))\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.def.ruby</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.ruby</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string> the method pattern comes from the symbol pattern, see there for a explaination</string>
				<key>contentName</key>
				<string>variable.parameter.function.ruby</string>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.method.with-arguments.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.def.ruby</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string> the optional name is just to catch the def also without a method-name</string>
				<key>match</key>
				<string>(?&lt;=^|\s)(def)\b(\s+((?&gt;[a-zA-Z_]\w*(?&gt;\.|::))?(?&gt;[a-zA-Z_]\w*(?&gt;[?!]|=(?!&gt;))?|===?|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?)))?</string>
				<key>name</key>
				<string>meta.function.method.without-arguments.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(0[xX]\h(?&gt;_?\h)*|\d(?&gt;_?\d)*(\.(?![^[:space:][:digit:]])(?&gt;_?\d)*)?([eE][-+]?\d(?&gt;_?\d)*)?|0[bB][01]+)\b</string>
				<key>name</key>
				<string>constant.numeric.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>:'</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.constant.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>'</string>
				<key>name</key>
				<string>constant.other.symbol.single-quoted.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\['\\]</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>:"</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.constant.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>"</string>
				<key>name</key>
				<string>constant.other.symbol.double-quoted.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>'</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>single quoted string (does not allow interpolation)</string>
				<key>end</key>
				<string>'</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.single.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\'|\\\\</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>"</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>double quoted string (allows for interpolation)</string>
				<key>end</key>
				<string>"</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.double.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>`</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allows for interpolation)</string>
				<key>end</key>
				<string>`</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%x\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allow for interpolation)</string>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_curly_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%x\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allow for interpolation)</string>
				<key>end</key>
				<string>\]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_brackets_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%x\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allow for interpolation)</string>
				<key>end</key>
				<string>\&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_ltgt_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%x\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allow for interpolation)</string>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_parens_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%x([^\w])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>execute string (allow for interpolation)</string>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.interpolated.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?x)
			   (?:
			     ^                      # beginning of line
			   | (?&lt;=                   # or look-behind on:
			       [=&gt;~(?:\[,|&amp;;]
			     | (?:\s|;)when\s
			     | (?:\s|;)or\s
			     | (?:\s|;)and\s
			     | (?:\s|;)not\s
			     | (?:\s|;|\.)index\s
			     | (?:\s|;|\.)scan\s
			     | (?:\s|;|\.)sub\s
			     | (?:\s|l|\.)sub!\s
			     | (?:\s|;|\.)gsub\s
			     | (?:\s|;|\.)gsub!\s
			     | (?:\s|;|\.)match\s
			     | (?:\s|;)if\s
			     | (?:\s|;)elsif\s
			     | (?:\s|;)while\s
			     | (?:\s|;)unless\s
			     )
			   | (?&lt;=                  # or a look-behind with line anchor:
			        ^when\s              # duplication necessary due to limits of regex
			      | ^index\s
			      | ^scan\s
			      | ^sub\s
			      | ^gsub\s
			      | ^sub!\s
			      | ^gsub!\s
			      | ^match\s
			      | ^if\s
			      | ^elsif\s
			      | ^while\s
			      | ^unless\s
			      | ^Given\s
			      )
			   )
			   \s*((/))(?![*+{}?])
			</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.regexp.classic.ruby</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (normal)
			we only start a regexp if the character before it (excluding whitespace)
			is what we think is before a regexp
			</string>
				<key>contentName</key>
				<string>string.regexp.classic.ruby</string>
				<key>end</key>
				<string>((/[eimnosux]*))</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%r\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (literal)</string>
				<key>end</key>
				<string>\}[eimnosux]*</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.mod-r.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_curly_r</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%r\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (literal)</string>
				<key>end</key>
				<string>\][eimnosux]*</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.mod-r.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_brackets_r</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%r\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (literal)</string>
				<key>end</key>
				<string>\)[eimnosux]*</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.mod-r.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_parens_r</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%r\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (literal)</string>
				<key>end</key>
				<string>\&gt;[eimnosux]*</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.mod-r.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_ltgt_r</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%r([^\w])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>regular expressions (literal)</string>
				<key>end</key>
				<string>\1[eimnosux]*</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.mod-r.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#regex_sub</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[QWSR]?\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation ()</string>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.upper.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_parens_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[QWSR]?\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation []</string>
				<key>end</key>
				<string>\]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.upper.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_brackets_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[QWSR]?\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation &lt;&gt;</string>
				<key>end</key>
				<string>\&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.upper.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_ltgt_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[QWSR]?\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation -- {}</string>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.double.ruby.mod</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_curly_i</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[QWSR]([^\w])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation -- wildcard</string>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.upper.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%([^\w\s=])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal capable of interpolation -- wildcard</string>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.other.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[qws]\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal incapable of interpolation -- ()</string>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.lower.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\\)|\\\\</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_parens</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[qws]\&lt;</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal incapable of interpolation -- &lt;&gt;</string>
				<key>end</key>
				<string>\&gt;</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.lower.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\\&gt;|\\\\</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_ltgt</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[qws]\[</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal incapable of interpolation -- []</string>
				<key>end</key>
				<string>\]</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.lower.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\\]|\\\\</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_brackets</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[qws]\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal incapable of interpolation -- {}</string>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.lower.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\\\}|\\\\</string>
						<key>name</key>
						<string>constant.character.escape.ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#nest_curly</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>%[qws]([^\w])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>literal incapable of interpolation -- wildcard</string>
				<key>end</key>
				<string>\1</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.quoted.other.literal.lower.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Cant be named because its not neccesarily an escape.</string>
						<key>match</key>
						<string>\\.</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.constant.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>symbols</string>
				<key>match</key>
				<string>(?&lt;!:)(:)(?&gt;[a-zA-Z_]\w*(?&gt;[?!]|=(?![&gt;=]))?|===?|&gt;[&gt;=]?|&lt;[&lt;=]?|&lt;=&gt;|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]=?|@@?[a-zA-Z_]\w*)</string>
				<key>name</key>
				<string>constant.other.symbol.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>^=begin</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>multiline comments</string>
				<key>end</key>
				<string>^=end</string>
				<key>name</key>
				<string>comment.block.documentation.ruby</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.ruby</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(?:^[ \t]+)?(#).*$\n?</string>
				<key>name</key>
				<string>comment.line.number-sign.ruby</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>
			matches questionmark-letters.

			examples (1st alternation = hex):
			?\x1     ?\x61

			examples (2nd alternation = octal):
			?\0      ?\07     ?\017

			examples (3rd alternation = escaped):
			?\n      ?\b

			examples (4th alternation = meta-ctrl):
			?\C-a    ?\M-a    ?\C-\M-\C-\M-a

			examples (4th alternation = normal):
			?a       ?A       ?0 
			?*       ?"       ?( 
			?.       ?#
			
			
			the negative lookbehind prevents against matching
			p(42.tainted?)
			</string>
				<key>match</key>
				<string>(?&lt;!\w)\?(\\(x\h{1,2}(?!\h)\b|0[0-7]{0,2}(?![0-7])\b|[^x0MC])|(\\[MC]-)+\w|[^\s\\])</string>
				<key>name</key>
				<string>constant.numeric.ruby</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>^__END__\n</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>string.unquoted.program-block.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>__END__ marker</string>
				<key>contentName</key>
				<string>text.plain</string>
				<key>end</key>
				<string>(?=not)impossible</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(?=&lt;?xml|&lt;(?i:html\b)|!DOCTYPE (?i:html\b))</string>
						<key>end</key>
						<string>(?=not)impossible</string>
						<key>name</key>
						<string>text.html.embedded.ruby</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>text.html.basic</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?!\s+#\s*([Cc]|sh|[Jj]ava))</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.heredoc.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;&lt;&lt;-HTML\b)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>heredoc with embedded HTML and indented terminator</string>
				<key>contentName</key>
				<string>text.html.embedded.ruby</string>
				<key>end</key>
				<string>\s*HTML$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.html.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>text.html.basic</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;&lt;&lt;-(["\\']?)(\w+_(?i:eval))\1)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>ruby code in heredoc, interpolated</string>
				<key>end</key>
				<string>\s*\2$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.ruby.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;&lt;&lt;-(\w+))</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>heredoc with indented terminator</string>
				<key>end</key>
				<string>\s*\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.heredoc.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc](?!(\+\+|[Ss][Ss])))</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.c.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.c</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc]\+\+)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.cplusplus.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.c++</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Cc][Ss][Ss])</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.css.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.css</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?=\s+#\s*[Jj]ava[Ss]cript)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.js.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&gt;\=\s*&lt;&lt;(\w+))(?=\s+#\s*sh)</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^\1$</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.ruby</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.embedded.shell.ruby</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#heredoc</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.shell</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#interpolated_ruby</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;=\{|do|\{\s|do\s)(\|)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.variable.ruby</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\|)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>[_a-zA-Z][_a-zA-Z0-9]*</string>
						<key>name</key>
						<string>variable.other.block.ruby</string>
					</dict>
					<dict>
						<key>match</key>
						<string>,</string>
						<key>name</key>
						<string>punctuation.separator.variable.ruby</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>=&gt;</string>
				<key>name</key>
				<string>punctuation.separator.key-value</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\+@|-@</string>
				<key>name</key>
				<string>keyword.operator.unary.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>&lt;&lt;=|%=|&amp;=|\*=|\*\*=|\+=|\-=|\^=|\|{1,2}=|/=|&lt;&lt;</string>
				<key>name</key>
				<string>keyword.operator.assignment.augmented.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>&lt;=&gt;|&lt;(?!&lt;|=)|&gt;(?!&lt;|=|&gt;)|&lt;=|&gt;=|===|==|=~|!=|!~|(?&lt;=[ \t])\?</string>
				<key>name</key>
				<string>keyword.operator.comparison.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;=[ \t])!+|\bnot\b|&amp;&amp;|\band\b|\|\||\bor\b|\^</string>
				<key>name</key>
				<string>keyword.operator.logical.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(%|&amp;|\*\*|\*|\+|\-|/)</string>
				<key>name</key>
				<string>keyword.operator.arithmetic.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>=</string>
				<key>name</key>
				<string>keyword.operator.assignment.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\||~|&gt;&gt;</string>
				<key>name</key>
				<string>keyword.operator.other.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>:</string>
				<key>name</key>
				<string>punctuation.separator.other.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\;</string>
				<key>name</key>
				<string>punctuation.separator.statement.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>,</string>
				<key>name</key>
				<string>punctuation.separator.object.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\.|::</string>
				<key>name</key>
				<string>punctuation.separator.method.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\{|\}</string>
				<key>name</key>
				<string>punctuation.section.scope.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\[|\]</string>
				<key>name</key>
				<string>punctuation.section.array.ruby</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\(|\)</string>
				<key>name</key>
				<string>punctuation.section.function.ruby</string>
			</dict>
		</array>
	</dict>
	<key>deleted</key>
	<array/>
	<key>isDelta</key>
	<true/>
	<key>uuid</key>
	<string>E00B62AC-6B1C-11D9-9B1F-000D93589AF6</string>
</dict>
</plist>
